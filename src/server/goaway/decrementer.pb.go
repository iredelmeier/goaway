// Code generated by protoc-gen-go. DO NOT EDIT.
// source: decrementer.proto

package goaway

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DecrementRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecrementRequest) Reset()         { *m = DecrementRequest{} }
func (m *DecrementRequest) String() string { return proto.CompactTextString(m) }
func (*DecrementRequest) ProtoMessage()    {}
func (*DecrementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_decrementer_5737fc93441d56ae, []int{0}
}
func (m *DecrementRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecrementRequest.Unmarshal(m, b)
}
func (m *DecrementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecrementRequest.Marshal(b, m, deterministic)
}
func (dst *DecrementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecrementRequest.Merge(dst, src)
}
func (m *DecrementRequest) XXX_Size() int {
	return xxx_messageInfo_DecrementRequest.Size(m)
}
func (m *DecrementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecrementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecrementRequest proto.InternalMessageInfo

type DecrementReply struct {
	Count                int64    `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecrementReply) Reset()         { *m = DecrementReply{} }
func (m *DecrementReply) String() string { return proto.CompactTextString(m) }
func (*DecrementReply) ProtoMessage()    {}
func (*DecrementReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_decrementer_5737fc93441d56ae, []int{1}
}
func (m *DecrementReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecrementReply.Unmarshal(m, b)
}
func (m *DecrementReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecrementReply.Marshal(b, m, deterministic)
}
func (dst *DecrementReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecrementReply.Merge(dst, src)
}
func (m *DecrementReply) XXX_Size() int {
	return xxx_messageInfo_DecrementReply.Size(m)
}
func (m *DecrementReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DecrementReply.DiscardUnknown(m)
}

var xxx_messageInfo_DecrementReply proto.InternalMessageInfo

func (m *DecrementReply) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*DecrementRequest)(nil), "goaway.DecrementRequest")
	proto.RegisterType((*DecrementReply)(nil), "goaway.DecrementReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DecrementerClient is the client API for Decrementer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DecrementerClient interface {
	Decrement(ctx context.Context, in *DecrementRequest, opts ...grpc.CallOption) (*DecrementReply, error)
}

type decrementerClient struct {
	cc *grpc.ClientConn
}

func NewDecrementerClient(cc *grpc.ClientConn) DecrementerClient {
	return &decrementerClient{cc}
}

func (c *decrementerClient) Decrement(ctx context.Context, in *DecrementRequest, opts ...grpc.CallOption) (*DecrementReply, error) {
	out := new(DecrementReply)
	err := c.cc.Invoke(ctx, "/goaway.Decrementer/Decrement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Decrementer service

type DecrementerServer interface {
	Decrement(context.Context, *DecrementRequest) (*DecrementReply, error)
}

func RegisterDecrementerServer(s *grpc.Server, srv DecrementerServer) {
	s.RegisterService(&_Decrementer_serviceDesc, srv)
}

func _Decrementer_Decrement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecrementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DecrementerServer).Decrement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goaway.Decrementer/Decrement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DecrementerServer).Decrement(ctx, req.(*DecrementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Decrementer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "goaway.Decrementer",
	HandlerType: (*DecrementerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Decrement",
			Handler:    _Decrementer_Decrement_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "decrementer.proto",
}

func init() { proto.RegisterFile("decrementer.proto", fileDescriptor_decrementer_5737fc93441d56ae) }

var fileDescriptor_decrementer_5737fc93441d56ae = []byte{
	// 127 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0x49, 0x4d, 0x2e,
	0x4a, 0xcd, 0x4d, 0xcd, 0x2b, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4b,
	0xcf, 0x4f, 0x2c, 0x4f, 0xac, 0x54, 0x12, 0xe2, 0x12, 0x70, 0x81, 0x49, 0x06, 0xa5, 0x16, 0x96,
	0xa6, 0x16, 0x97, 0x28, 0xa9, 0x71, 0xf1, 0x21, 0x89, 0x15, 0xe4, 0x54, 0x0a, 0x89, 0x70, 0xb1,
	0x26, 0xe7, 0x97, 0xe6, 0x95, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0x41, 0x38, 0x46, 0x7e,
	0x5c, 0xdc, 0x2e, 0x08, 0x83, 0x85, 0xec, 0xb9, 0x38, 0xe1, 0x5c, 0x21, 0x09, 0x3d, 0x88, 0x05,
	0x7a, 0xe8, 0xa6, 0x4b, 0x89, 0x61, 0x91, 0x29, 0xc8, 0xa9, 0x54, 0x62, 0x48, 0x62, 0x03, 0x3b,
	0xcd, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x6f, 0x39, 0x14, 0xaf, 0x00, 0x00, 0x00,
}
